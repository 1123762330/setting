<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xnpool.setting.domain.mapper.CustomerSettingMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.xnpool.setting.domain.pojo.CustomerSetting">
        <id column="id" property="id" />
        <result column="user_id" property="userId" />
        <result column="agreement_id" property="agreementId" />
        <result column="group_id" property="groupId" />
        <result column="authentication" property="authentication" />
        <result column="is_watch" property="isWatch" />
        <result column="remarks" property="remarks" />
        <result column="is_delete" property="isDelete" />
        <result column="create_time" property="createTime" />
        <result column="update_time" property="updateTime" />
        <result column="manager_user_id" property="managerUserId" />
        <result column="cus_level_id" property="cusLevelId" />
        <result column="tenant_id" property="tenantId" />
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        id, user_id, agreement_id, group_id, authentication, is_watch, remarks, is_delete, create_time, update_time, manager_user_id, cus_level_id, tenant_id
    </sql>

    <select id="selectTenantList" resultType="java.util.HashMap">
        SELECT
        sys_tenant.tenant_name,
        customer_setting.tenant_id,
        customer_setting.authentication
        FROM
        customer_setting,
        sys_tenant
        WHERE
        user_id = #{userId}
        AND customer_setting.is_delete=0
        AND customer_setting.tenant_id = sys_tenant.id
        AND authentication !=2
        GROUP BY
        tenant_id
    </select>

    <!--  软删除-->
    <update id="deleteByKeyId">
        update customer_setting set is_delete = 1 where id = #{id,jdbcType=INTEGER}
    </update>

    <!--  根据条件查询客户列表-->
    <select id="selectByOther" resultType="com.xnpool.setting.domain.model.CustomerSettingExample">
        SELECT
            customer_setting.id,
            sys_user.username AS userName,
            sys_tenant.type AS cusType,
            sys_user.id AS userId,
            sys_user.contact_person,
            sys_user.mobile,
            sys_user.address,
            customer_setting.remarks,
            customer_setting.agreement_id,
            customer_setting.group_id,
            customer_setting.authentication,
            customer_setting.is_watch,
            customer_setting.manager_user_id,
            t_customer_level.id AS cusLevelId,
            t_customer_level.`level`
        FROM
            sys_user,
            sys_tenant,
            customer_setting
            LEFT JOIN t_customer_level ON customer_setting.cus_level_id = t_customer_level.id
        WHERE
            customer_setting.is_delete = 0
            AND customer_setting.user_id = sys_user.id
            AND customer_setting.tenant_id = sys_tenant.id
            AND authentication !=2
    </select>

    <!--  修改企业认证-->
    <update id="updateAttestationById">
        update customer_setting
        set authentication = #{isPass}
        where
        id in
        <foreach close=")" collection="list" index="index" item="item" open="(" separator=",">
            #{item}
        </foreach>
    </update>

    <!--查询客户姓名集合-->
    <select id="selectUserList" resultType="java.util.HashMap">
      SELECT
          customer_setting.id AS customerId,
          sys_user.id,
          sys_user.username
      FROM
          customer_setting,
          sys_user
      WHERE
          customer_setting.is_delete = 0
          AND customer_setting.authentication=1
          AND customer_setting.user_id = sys_user.id
    </select>

    <select id="selectUserMap" resultType="java.util.HashMap">
        SELECT
          sys_user.id,
          sys_user.username
      FROM
          sys_user
      WHERE
          sys_user.is_del = 0
    </select>

    <update id="deleteAuthority">
        update customer_setting set authentication = 2
        where
        user_id = #{userId}
        AND tenant_id in
        <foreach close=")" collection="list" index="index" item="item" open="(" separator=",">
            #{item}
        </foreach>
    </update>

    <select id="selectAuthorizedToYes" resultType="integer">
        SELECT
        customer_setting.user_id
        FROM
        customer_setting
        WHERE
        user_id = #{userId}
        AND authentication =1
    </select>
</mapper>
