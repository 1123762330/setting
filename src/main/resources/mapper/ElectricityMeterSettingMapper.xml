<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xnpool.setting.domain.mapper.ElectricityMeterSettingMapper">
  <resultMap id="BaseResultMap" type="com.xnpool.setting.domain.pojo.ElectricityMeterSetting">
    <!--@mbg.generated-->
    <!--@Table electricity_meter_setting-->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="electricity_meter_name" jdbcType="VARCHAR" property="electricityMeterName" />
    <result column="mine_id" jdbcType="INTEGER" property="mineId" />
    <result column="factory_id" jdbcType="INTEGER" property="factoryId" />
    <result column="customer_id" jdbcType="INTEGER" property="customerId" />
    <result column="electricity_start" jdbcType="VARCHAR" property="electricityStart" />
    <result column="line_loss" jdbcType="DOUBLE" property="lineLoss" />
    <result column="is_delete" jdbcType="INTEGER" property="isDelete" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, electricity_meter_name, mine_id, factory_id, customer_id, electricity_start, 
    line_loss, is_delete, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from electricity_meter_setting
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbg.generated-->
    delete from electricity_meter_setting
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.xnpool.setting.domain.pojo.ElectricityMeterSetting" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into electricity_meter_setting (electricity_meter_name, mine_id, factory_id, 
      customer_id, electricity_start, line_loss, 
      is_delete, create_time, update_time
      )
    values (#{electricityMeterName,jdbcType=VARCHAR}, #{mineId,jdbcType=INTEGER}, #{factoryId,jdbcType=INTEGER}, 
      #{customerId,jdbcType=INTEGER}, #{electricityStart,jdbcType=VARCHAR}, #{lineLoss,jdbcType=DOUBLE}, 
      #{isDelete,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.xnpool.setting.domain.pojo.ElectricityMeterSetting" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into electricity_meter_setting
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="electricityMeterName != null">
        electricity_meter_name,
      </if>
      <if test="mineId != null">
        mine_id,
      </if>
      <if test="factoryId != null">
        factory_id,
      </if>
      <if test="customerId != null">
        customer_id,
      </if>
      <if test="electricityStart != null">
        electricity_start,
      </if>
      <if test="lineLoss != null">
        line_loss,
      </if>
      <if test="isDelete != null">
        is_delete,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="electricityMeterName != null">
        #{electricityMeterName,jdbcType=VARCHAR},
      </if>
      <if test="mineId != null">
        #{mineId,jdbcType=INTEGER},
      </if>
      <if test="factoryId != null">
        #{factoryId,jdbcType=INTEGER},
      </if>
      <if test="customerId != null">
        #{customerId,jdbcType=INTEGER},
      </if>
      <if test="electricityStart != null">
        #{electricityStart,jdbcType=VARCHAR},
      </if>
      <if test="lineLoss != null">
        #{lineLoss,jdbcType=DOUBLE},
      </if>
      <if test="isDelete != null">
        #{isDelete,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xnpool.setting.domain.pojo.ElectricityMeterSetting">
    <!--@mbg.generated-->
    update electricity_meter_setting
    <set>
      <if test="electricityMeterName != null">
        electricity_meter_name = #{electricityMeterName,jdbcType=VARCHAR},
      </if>
      <if test="mineId != null">
        mine_id = #{mineId,jdbcType=INTEGER},
      </if>
      <if test="factoryId != null">
        factory_id = #{factoryId,jdbcType=INTEGER},
      </if>
      <if test="customerId != null">
        customer_id = #{customerId,jdbcType=INTEGER},
      </if>
      <if test="electricityStart != null">
        electricity_start = #{electricityStart,jdbcType=VARCHAR},
      </if>
      <if test="lineLoss != null">
        line_loss = #{lineLoss,jdbcType=DOUBLE},
      </if>
      <if test="isDelete != null">
        is_delete = #{isDelete,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xnpool.setting.domain.pojo.ElectricityMeterSetting">
    <!--@mbg.generated-->
    update electricity_meter_setting
    set electricity_meter_name = #{electricityMeterName,jdbcType=VARCHAR},
      mine_id = #{mineId,jdbcType=INTEGER},
      factory_id = #{factoryId,jdbcType=INTEGER},
      customer_id = #{customerId,jdbcType=INTEGER},
      electricity_start = #{electricityStart,jdbcType=VARCHAR},
      line_loss = #{lineLoss,jdbcType=DOUBLE},
      is_delete = #{isDelete,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <!--  软删除-->
  <update id="updateById">
    update electricity_meter_setting set is_delete = 1 where id = #{id,jdbcType=INTEGER}
  </update>
<!--  根据条件查询电表列表-->
    <select id="selectByOther" resultType="com.xnpool.setting.domain.model.ElectricityMeterSettingExample">
      SELECT
      electricity_meter_setting.id,
      electricity_meter_setting.electricity_meter_Name,
      electricity_meter_setting.mine_id,
      electricity_meter_setting.factory_id,
      electricity_meter_setting.customer_id,
      electricity_meter_setting.electricity_start,
      electricity_meter_setting.line_loss,
      electricity_meter_setting.create_time,
      electricity_meter_setting.update_time,
      mine_setting.mine_name,
      factory_house.factory_name,
      sys_user.username
      FROM
      electricity_meter_setting,
      mine_setting,
      factory_house,
      customer_setting,
      sys_user
      <where>
        electricity_meter_setting.is_delete = 0
        <if test="keyWord != null">
          AND (electricity_meter_setting.electricity_meter_Name like #{keyWord} )
        </if>
        AND electricity_meter_setting.mine_id = mine_setting.id
        AND electricity_meter_setting.factory_id = factory_house.id
        AND electricity_meter_setting.customer_id = customer_setting.id
        AND customer_setting.user_id= sys_user.id
      </where>
    </select>

  <select id="selectNameList" resultType="string">
    select electricity_meter_name FROM electricity_meter_setting where  is_delete=0
    <if test="id != null">
      AND id!=#{id}
    </if>
  </select>
</mapper>