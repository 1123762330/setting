<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xnpool.setting.domain.mapper.IpSettingMapper">
  <resultMap id="BaseResultMap" type="com.xnpool.setting.domain.pojo.IpSetting">
    <!--@mbg.generated-->
    <!--@Table ip_setting-->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="start_ip" jdbcType="VARCHAR" property="startIp" />
    <result column="end_ip" jdbcType="VARCHAR" property="endIp" />
    <result column="mine_id" jdbcType="INTEGER" property="mineId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="is_delete" jdbcType="INTEGER" property="isDelete" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, start_ip, end_ip, mine_id, create_time, update_time, is_delete
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from ip_setting
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbg.generated-->
    delete from ip_setting
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.xnpool.setting.domain.pojo.IpSetting" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into ip_setting (start_ip, end_ip, mine_id, 
      create_time, update_time, is_delete
      )
    values (#{startIp,jdbcType=VARCHAR}, #{endIp,jdbcType=VARCHAR}, #{mineId,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{isDelete,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.xnpool.setting.domain.pojo.IpSetting" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into ip_setting
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="startIp != null">
        start_ip,
      </if>
      <if test="endIp != null">
        end_ip,
      </if>
      <if test="mineId != null">
        mine_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="isDelete != null">
        is_delete,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="startIp != null">
        #{startIp,jdbcType=VARCHAR},
      </if>
      <if test="endIp != null">
        #{endIp,jdbcType=VARCHAR},
      </if>
      <if test="mineId != null">
        #{mineId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDelete != null">
        #{isDelete,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xnpool.setting.domain.pojo.IpSetting">
    <!--@mbg.generated-->
    update ip_setting
    <set>
      <if test="startIp != null">
        start_ip = #{startIp,jdbcType=VARCHAR},
      </if>
      <if test="endIp != null">
        end_ip = #{endIp,jdbcType=VARCHAR},
      </if>
      <if test="mineId != null">
        mine_id = #{mineId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDelete != null">
        is_delete = #{isDelete,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xnpool.setting.domain.pojo.IpSetting">
    <!--@mbg.generated-->
    update ip_setting
    set start_ip = #{startIp,jdbcType=VARCHAR},
      end_ip = #{endIp,jdbcType=VARCHAR},
      mine_id = #{mineId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      is_delete = #{isDelete,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

<!--  软删除-->
  <update id="updateById">
    update ip_setting set is_delete = 1 where id = #{id,jdbcType=INTEGER}
  </update>

<!--  根据条件查询列表-->
  <select id="selectByOther" resultType="com.xnpool.setting.domain.model.IpSettingExample">
    select
    ip_setting.id,
    ip_setting.start_ip,
    ip_setting.end_ip,
    ip_setting.mine_id,
    mine_setting.mine_name
    from ip_setting,
    mine_setting
    <where>
      ip_setting.is_delete = 0
      AND ip_setting.mine_id = mine_setting.id
      <if test="keyWord != null and keyWord != ''">
        AND (ip_setting.start_ip like #{keyWord} or ip_setting.end_ip like #{keyWord})
      </if>
    </where>
  </select>

  <select id="selectMineId" resultType="integer">
    select mine_id FROM ip_setting where id=#{id}
  </select>

  <select id="selectNameList" resultType="string">
    select start_ip FROM ip_setting where  is_delete=0
    <if test="id != null">
      AND id!=#{id}
    </if>
  </select>
</mapper>