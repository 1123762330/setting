<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xnpool.setting.domain.mapper.FeeSettingMapper">
  <resultMap id="BaseResultMap" type="com.xnpool.setting.domain.pojo.FeeSetting">
    <!--@mbg.generated-->
    <!--@Table fee_setting-->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="fee_price" jdbcType="DOUBLE" property="feePrice" />
    <result column="fee_name" jdbcType="VARCHAR" property="feeName" />
    <result column="is_delete" jdbcType="INTEGER" property="isDelete" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, fee_price, fee_name, is_delete, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from fee_setting
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbg.generated-->
    delete from fee_setting
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.xnpool.setting.domain.pojo.FeeSetting" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into fee_setting (fee_price, fee_name, is_delete, 
      create_time, update_time)
    values (#{feePrice,jdbcType=DOUBLE}, #{feeName,jdbcType=VARCHAR}, #{isDelete,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.xnpool.setting.domain.pojo.FeeSetting" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into fee_setting
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="feePrice != null">
        fee_price,
      </if>
      <if test="feeName != null">
        fee_name,
      </if>
      <if test="isDelete != null">
        is_delete,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="feePrice != null">
        #{feePrice,jdbcType=DOUBLE},
      </if>
      <if test="feeName != null">
        #{feeName,jdbcType=VARCHAR},
      </if>
      <if test="isDelete != null">
        #{isDelete,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xnpool.setting.domain.pojo.FeeSetting">
    <!--@mbg.generated-->
    update fee_setting
    <set>
      <if test="feePrice != null">
        fee_price = #{feePrice,jdbcType=DOUBLE},
      </if>
      <if test="feeName != null">
        fee_name = #{feeName,jdbcType=VARCHAR},
      </if>
      <if test="isDelete != null">
        is_delete = #{isDelete,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xnpool.setting.domain.pojo.FeeSetting">
    <!--@mbg.generated-->
    update fee_setting
    set fee_price = #{feePrice,jdbcType=DOUBLE},
      fee_name = #{feeName,jdbcType=VARCHAR},
      is_delete = #{isDelete,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <!--  软删除-->
  <update id="updateById">
    update fee_setting set is_delete = 1 where id = #{id,jdbcType=INTEGER}
  </update>

  <!--  根据条件进行查询-->
  <select id="selectByOther" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from fee_setting
    <where>
      is_delete = 0
      <if test="keyWord != null">
        AND (fee_price like #{keyWord} or `fee_name` like #{keyWord})
      </if>
    </where>
  </select>

  <select id="selectFeeNameList" resultType="string">
    select fee_name FROM fee_setting  where is_delete=0
    <if test="id != null">
      AND id!=#{id}
    </if>
  </select>
</mapper>