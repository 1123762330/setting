<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xnpool.setting.domain.mapper.MineSettingMapper">
  <resultMap id="BaseResultMap" type="com.xnpool.setting.domain.pojo.MineSetting">
    <!--@mbg.generated-->
    <!--@Table mine_setting-->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="mine_name" jdbcType="VARCHAR" property="mineName" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="is_delete" jdbcType="INTEGER" property="isDelete" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, mine_name, description, is_delete, update_time, create_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from mine_setting
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbg.generated-->
    delete from mine_setting
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.xnpool.setting.domain.pojo.MineSetting" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into mine_setting (mine_name, description, is_delete, 
      update_time, create_time)
    values (#{mineName,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, #{isDelete,jdbcType=INTEGER}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.xnpool.setting.domain.pojo.MineSetting" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into mine_setting
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="mineName != null">
        mine_name,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="isDelete != null">
        is_delete,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="mineName != null">
        #{mineName,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="isDelete != null">
        #{isDelete,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xnpool.setting.domain.pojo.MineSetting">
    <!--@mbg.generated-->
    update mine_setting
    <set>
      <if test="mineName != null">
        mine_name = #{mineName,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="isDelete != null">
        is_delete = #{isDelete,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xnpool.setting.domain.pojo.MineSetting">
    <!--@mbg.generated-->
    update mine_setting
    set mine_name = #{mineName,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      is_delete = #{isDelete,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>

<!--  软删除-->
  <update id="updateById">
    update mine_setting set is_delete = 1 where id = #{id,jdbcType=INTEGER}
  </update>

<!--  根据搜索条件查询列表-->
  <select id="selectByOther" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from mine_setting
    <where>
      is_delete = 0
      <if test="keyWord != null">
        AND (mmine_name like #{keyWord} or `description` like #{keyWord})
      </if>
    </where>
  </select>

  <select id="selectMineFactoryAndFrame" resultType="hashmap">
    SELECT
        frame_setting.id AS frameId,
        frame_setting.frameName,
        factory_house.id AS factoryId,
        factory_house.factoryName,
        mine_setting.id AS mineId,
        mine_setting.mineName
    FROM
        frame_setting,
        factory_house,
        mine_setting
    WHERE
        frame_setting.factoryId = factory_house.id
        AND frame_setting.mineId = mine_setting.id
        AND frame_setting.isDelete=0
  </select>

</mapper>