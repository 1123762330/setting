server:
  port: 8766
  servlet:
    context-path: /setting
---
spring:
  application:
    name: mine-setting-api
---
eureka:
  instance:
    leaseRenewalIntervalInSeconds: 10
    health-check-url-path: /actuator/health
    prefer-ip-address: true
  client:
    registryFetchIntervalSeconds: 5
    service-url:
      #defaultZone: http://127.0.0.1:9601/eureka/
      defaultZone: http://127.0.0.1:9601/eureka/
---
feign:
  hystrix:
    enabled: true #feign开启hystrix支持
hystrix:
  command:
    default:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 20000
#ribbon的超时时间, 防止feign调用超时
ribbon:
  ReadTimeout: 15000
  ConnectTimeout: 15000
  MaxAutoRetries: 1 #同一台实例最大重试次数,不包括首次调用
  MaxAutoRetriesNextServer: 1 #重试负载均衡其他的实例最大重试次数,不包括首次调用
  OkToRetryOnAllOperations: false  #是否所有操作都重试
---
spring:
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    druid:
      # 特别注意：java 9以后需要将com.mysql.jdbc.Driver  改为  com.mysql.cj.jdbc.Driver即可
      # 否则报错：Loading class `com.mysql.jdbc.Driver'. This is deprecated.
      driver-class-name: com.mysql.cj.jdbc.Driver
      #基本属性
      url: jdbc:mysql://182.92.235.178:3306/xnpool_mine?useUnicode=true&characterEncoding=utf8&serverTimezone=Asia/Shanghai
      username: root
      password: mine#mysql&nm45
      #配置初始化大小/最小/最大[仅用于测试，生成环境需要修改哦]
      initial-size: 1
      min-idle: 1
      max-active: 20
      #获取连接等待超时时间
      max-wait: 60000
      #间隔多久进行一次检测，检测需要关闭的空闲连接
      time-between-eviction-runs-millis: 60000
      #一个连接在池中最小生存的时间
      min-evictable-idle-time-millis: 300000
      #指定获取连接时连接校验的sql查询语句
      validation-query: SELECT 'x'
      #验证连接的有效性
      test-while-idle: true
      #获取连接时候验证，会影响性能（不建议true）
      test-on-borrow: false
      #打开PSCache，并指定每个连接上PSCache的大小。oracle设为true，mysql设为false。分库分表较多推荐设置为false
      pool-prepared-statements: false
      max-pool-prepared-statement-per-connection-size: 20
---
#mybatis-plus配置
mybatis-plus:
  mapper-locations: classpath:mapper/*Mapper.xml
  typeAliasesPackage:  com.xnpool.setting.domain.mapper
  global-config:
    #开启注解,过滤某些不需要启用多租户的方法
    sql-parser-cache: true
    db-config:
      id-type: AUTO
      field-strategy: not_empty
      column-underline: true
      #capital-mode: true
      logic-delete-value: 1 # 逻辑已删除值(默认为 1)
      logic-not-delete-value: 0 # 逻辑未删除值(默认为 0)
      db-type: mysql
    refresh: true

  configuration:
    map-underscore-to-camel-case: true
    cache-enabled: false
---
#mysql语句需要打印就true,不需要打印就false-->注入对应的Bean(打印sql)
sql:
performanceInterceptor: true
---
spring:
  redis: #数据源1
    host: 182.92.235.178
    port: 6379
    password: xnpool#67mm
    database: 0
    jedis:
      pool:
        max-active: 32
        max-wait: -1
        max-idle: 16
        min-idle: 8
    timeout: 90000ms
    block-when-exhausted: true
---
http:
  maxTotal: 100
  defaultMaxPerRoute: 50
  connectTimeout: 1000
  connectionRequestTimeout: 500
  socketTimeout: 10000
  staleConnectionCheckEnabled: true
---
#pagehelper分页插件配置
pagehelper:
  auto-dialect: mysql
  reasonable: true
  supportMethodsArguments: true
  params: countSql
---
#配置springboot缓存
spring:
  cache:
    type: ehcache
    ehcache:
      config: classpath:/ehcache.xml
#图片文件夹
config:
  filePath: /extPath/static/
  prifix: /upload/word/
  prifix_2: /setting/pushweb/push_web/upload/

#多租户配置是否启用
zlt:
  #多租户配置
  tenant:
    enable: true
    ignoreTables:
      - algorithm
      - workerbrand_setting
    ignoreSqls:
      - com.xnpool.setting.domain.mapper.CustomerSettingMapper.selectTenantList
      - com.xnpool.setting.domain.mapper.CustomerSettingMapper.insert
      - com.xnpool.setting.domain.mapper.CustomerSettingMapper.deleteAuthority

---
#上传和下载文件大小设置
  spring:
    servlet:
      multipart:
        #设置单个文件大小不超过10m
        max-file-size: 10485760
        #设置单次请求文件的总大小10m
        max-request-size: 10485760